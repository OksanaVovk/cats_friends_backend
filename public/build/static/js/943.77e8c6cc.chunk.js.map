{"version":3,"file":"static/js/943.77e8c6cc.chunk.js","mappings":"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","sources":["components/Blog.js","pages/BlogPage.js","redux/cats/catsSelectors.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  List,\r\n} from '@mui/material';\r\n\r\nimport { catsSelectors } from '../redux/cats/catsSelectors';\r\n\r\nconst Blog = () => {\r\n  const itemData = useSelector(catsSelectors.selectCats);\r\n  const isError = useSelector(catsSelectors.selectCatsError);\r\n  return (\r\n    <>\r\n      {isError ? (\r\n        <Typography gutterBottom variant=\"h5\">\r\n          Request error\r\n        </Typography>\r\n      ) : (\r\n        <List>\r\n          {itemData.map(item => (\r\n            <Box\r\n              id={item._id}\r\n              key={item._id}\r\n              sx={{ padding: { xs: '20px', md: '50px' } }}\r\n            >\r\n              <Card\r\n                sx={{\r\n                  maxWidth: 900,\r\n                  margin: '0 auto',\r\n                  boxShadow: 3,\r\n                  borderRadius: 2,\r\n                  display: 'flex',\r\n                  flexDirection: { xs: 'column', sm: 'row' },\r\n                }}\r\n              >\r\n                <Box>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    image={item.img}\r\n                    alt=\"Cat Image\"\r\n                    sx={{\r\n                      height: '300px',\r\n                      width: { xs: '100%', sm: '300px' },\r\n                      objectFit: 'cover',\r\n                      borderRadius: '8px 0 0 8px',\r\n                    }}\r\n                  />\r\n                </Box>\r\n\r\n                <Box>\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                      {item.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                      {item.gender}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                      {item.age} months\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      color=\"text.secondary\"\r\n                      sx={{ marginBottom: '10px' }}\r\n                    >\r\n                      {item.weight} kg\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                      {item.text}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Box>\r\n              </Card>\r\n            </Box>\r\n          ))}\r\n        </List>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import { Typography, Box } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport { catsSelectors } from '../redux/cats/catsSelectors';\r\nimport Blog from 'components/Blog';\r\nimport Loader from 'components/Loader';\r\n\r\nconst BlogPage = () => {\r\n  const isLoading = useSelector(catsSelectors.selectCatsIsLoading);\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          padding: { xs: '50px 50px', lg: '100px 50px' },\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h3\"\r\n          sx={{\r\n            marginBottom: '20px',\r\n            textAlign: 'center',\r\n            fontSize: { xs: '1.5rem', md: '2rem' },\r\n          }}\r\n        >\r\n          A New Life Just One Step Away: Give a Home to an Animal\r\n        </Typography>\r\n        <Blog />\r\n      </Box>\r\n      ;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n","const selectCats = state => state.cats.data;\r\nconst selectCatsIsLoading = state => state.cats.isLoading;\r\nconst selectCatsError = state => state.cats.error;\r\n\r\nexport const catsSelectors = {\r\n  selectCats,\r\n  selectCatsIsLoading,\r\n  selectCatsError,\r\n};\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardMediaUtilityClass } from \"./cardMediaClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  variants: [{\n    props: {\n      isMediaComponent: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      isImageComponent: true\n    },\n    style: {\n      objectFit: 'cover'\n    }\n  }]\n});\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style,\n    ...other\n  } = props;\n  const isMediaComponent = MEDIA_COMPONENTS.includes(component);\n  const composedStyle = !isMediaComponent && image ? {\n    backgroundImage: `url(\"${image}\")`,\n    ...style\n  } : style;\n  const ownerState = {\n    ...props,\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.includes(component)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined,\n    ...other,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["itemData","useSelector","catsSelectors","isError","Typography","gutterBottom","variant","List","map","item","Box","id","_id","sx","padding","xs","md","Card","maxWidth","margin","boxShadow","borderRadius","display","flexDirection","sm","CardMedia","component","image","img","alt","height","width","objectFit","CardContent","title","color","gender","age","marginBottom","weight","text","isLoading","Loader","justifyContent","alignItems","lg","textAlign","fontSize","selectCats","state","cats","data","selectCatsIsLoading","selectCatsError","error","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardContentRoot","styled","name","overridesResolver","props","styles","root","paddingBottom","React","inProps","ref","useDefaultProps","className","other","ownerState","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","backgroundSize","backgroundRepeat","backgroundPosition","variants","style","MEDIA_COMPONENTS","IMAGE_COMPONENTS","children","src","includes","composedStyle","backgroundImage","slots","role","undefined","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation"],"sourceRoot":""}